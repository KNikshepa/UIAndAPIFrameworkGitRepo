pipeline {
    agent any

    environment {
        // Define the SonarQube server URL and authentication token
        SONARQUBE_URL = 'http://localhost:9000' // SonarQube server URL
        SONARQUBE_TOKEN = credentials('SonarQubeToken') // SonarQube Jenkins credentials ID
        GIT_TOKEN = credentials('GitHubTokenForAccess') // GitHub token stored in Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository from GitHub using the GitHub token
                git credentialsId: 'GitHubToken', url: 'https://github.com/KNikshepa/UIAndAPIFrameworkGitRepo.git', branch: 'master'
            }
        }

        stage('Build') {
            steps {
                // Run Maven to build your project
                sh 'mvn clean install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    // Run SonarQube analysis using the Jenkins-managed SonarQube server
                    withSonarQubeEnv('SonarQube') {
                        sh 'mvn clean verify sonar:sonar -Dsonar.projectKey=UIAndAPIAutomationWithSonar -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONARQUBE_TOKEN'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                // Run your tests (Selenium or API tests)
                sh 'mvn test'
            }
        }

        stage('Deploy') {
            steps {
                // Deploy the application if required (adjust as needed)
                echo 'Deploying application...'
                // Example: sh 'deploy.sh' or any other deployment command
            }
        }
    }

    post {
        success {
            // Actions to take on successful build (e.g., notify or clean up)
            echo 'Build completed successfully!'
        }
        failure {
            // Actions to take on failed build (e.g., notify failure)
            echo 'Build failed!'
        }
        always {
            // Clean up or other necessary actions
            echo 'Cleaning up...'
        }
    }
}
