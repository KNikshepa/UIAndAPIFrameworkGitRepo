pipeline {
    agent any

    environment {
        // Define the SonarQube server URL and authentication token
        SONARQUBE_URL = 'http://localhost:9000' // SonarQube server URL
        SONARQUBE_TOKEN = credentials('SonarQubeToken') // SonarQube Jenkins credentials ID
        GIT_TOKEN = credentials('Githubtoken') // GitHub token stored in Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository from GitHub using the GitHub token
                git credentialsId: 'Githubtoken', url: 'https://github.com/KNikshepa/UIAndAPIFrameworkGitRepo.git', branch: 'master'
            }
        }

        stage('Build') {
            steps {
                // Run Maven to build your project (use 'bat' for Windows)
                bat 'mvn clean install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    // Run SonarQube analysis using the Jenkins-managed SonarQube server
                    withSonarQubeEnv('SonarQube') {
                        bat 'mvn clean verify sonar:sonar -Dsonar.projectKey=UIAndAPIAutomationWithSonar -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONARQUBE_TOKEN'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                // Run your tests (Selenium or API tests) on Windows
                bat 'mvn test'
            }
        }

        stage('Deploy') {
            steps {
                // Deploy the application if required (adjust as needed)
                echo 'Deploying application...'
                // Example: bat 'deploy.bat' or any other deployment command
            }
        }
    }

    post {
        success {
            echo 'Build completed successfully!'
        }
        failure {
            echo 'Build failed!'
        }
        always {
            echo 'Cleaning up...'
        }
    }
}
